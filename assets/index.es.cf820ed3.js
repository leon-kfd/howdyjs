import{T as t}from"./index.es.8c5b8795.js";class e extends t{constructor({el:t,options:e}){super({el:t,options:Object.assign({adsorb:0,adsorbOffset:0,isAbsolute:!1,positionMode:1},e)}),this.arrowCtx=null,this.arrowStartX=0,this.arrowStartY=0,this.elWidth=0,this.elHeight=0,this.resizeFlag=!1,this.arrowMouseDownEvent=t=>{const e=this.isTouch?t.changedTouches[0].clientX:t.x,o=this.isTouch?t.changedTouches[0].clientY:t.y,{width:i,height:s,left:n,top:r}=this.el.getBoundingClientRect(),{width:h,height:l}=this.parent.getBoundingClientRect();let d,a;this.arrowStartX=e,this.arrowStartY=o,this.elWidth=i,this.elHeight=s,this.resizeFlag=!0,this.controlOptions.isAbsolute?(d=h-this.el.offsetLeft-this.borderInfo[1]-this.borderInfo[3],a=l-this.el.offsetTop-this.borderInfo[0]-this.borderInfo[2]):(d=window.innerWidth-n,a=window.innerHeight-r),setTimeout((()=>{this.isDrag=!1})),this.isTouch?(document.ontouchmove=t=>{if(!this.resizeFlag||!t.changedTouches)return;const{clientX:e,clientY:o}=t.changedTouches[0];this.el.style.width=`${Math.min(this.elWidth+e-this.arrowStartX,d)}px`,this.el.style.height=`${Math.min(this.elHeight+o-this.arrowStartY,a)}px`},document.ontouchend=()=>{this.resizeFlag=!1,document.ontouchmove=null,document.ontouchend=null}):(document.onmousemove=t=>{if(!this.resizeFlag)return;const{x:e,y:o}=t;this.el.style.width=`${Math.min(this.elWidth+e-this.arrowStartX,d)}px`,this.el.style.height=`${Math.min(this.elHeight+o-this.arrowStartY,a)}px`},document.onmouseup=()=>{this.resizeFlag=!1,document.onmousemove=null,document.onmouseup=null})},this.controlOptions=e||{},this.initControl()}initControl(){var t;const{position:e}=getComputedStyle(this.el);if(!["fixed","absolute"].includes(e))throw new Error("Control just work in the element which position is fixed or absolute.");this.arrowCtx=this.createResizeArrow(null===(t=this.controlOptions)||void 0===t?void 0:t.arrowOptions),this.el.appendChild(this.arrowCtx)}createResizeArrow(t){const e=Object.assign({size:8,lineWidth:2,lineColor:"#9a9a9a",padding:2},t),o=document.createElement("div"),i=`\n      position: absolute;\n      right: ${e.padding}px; \n      bottom: ${e.padding}px;\n      width: ${e.size}px;\n      height: ${e.size}px;\n      border-bottom: ${e.lineWidth}px solid ${e.lineColor};\n      border-right: ${e.lineWidth}px solid ${e.lineColor};\n      cursor: se-resize;\n      background: ${e.background||"none"}\n    `;return o.className="to-control-arrow",o.style.cssText=i,this.isTouch?o.addEventListener("touchstart",this.arrowMouseDownEvent):o.addEventListener("mousedown",this.arrowMouseDownEvent),o}destroyControl(){var t,e;this.destroy(),this.isTouch?null===(t=this.arrowCtx)||void 0===t||t.removeEventListener("touchstart",this.arrowMouseDownEvent):null===(e=this.arrowCtx)||void 0===e||e.removeEventListener("mousedown",this.arrowMouseDownEvent)}}const o=(t,o,i)=>{const{value:s}=o,n=i||{},r=Object.assign(Object.assign({},n),s);t.$toControl=new e({el:t,options:r})},i=t=>{t.$toControl&&t.$toControl.destroy()},s={mounted:(t,e)=>o(t,e),unmounted:i,inserted:(t,e)=>o(t,e),unbind:i,install:(t,e)=>{t.directive("to-control",{mounted:(t,i)=>o(t,i,e),unmounted:i,inserted:(t,i)=>o(t,i,e),unbind:i})}};export{e as T,s as a};
