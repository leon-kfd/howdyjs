export default'<h1 id="tocontrol">ToControl</h1>\n<p><img src="https://img.shields.io/npm/v/@howdyjs/to-control" alt="Version">\n<img src="https://img.shields.io/bundlephobia/min/@howdyjs/to-control?color=%2344cc88" alt="Size"></p>\n<p><strong>Resize or drag to move a html dom.</strong></p>\n<h2 id="特性">特性</h2>\n<ol>\n<li>将一个定位为absolute的Dom设置成可拖拽移动与更改大小</li>\n<li>继承于<a href="https://kongfandong.cn/howdy/to-drag/">@howdyjs/to-drag</a>，为其添加更改大小功能</li>\n</ol>\n<h2 id="原生使用">原生使用</h2>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> ToControl <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@howdyjs/to-control&#x27;</span>\n<span class="hljs-keyword">new</span> ToDrag({\n  el: <span class="hljs-string">&#x27;#to-control&#x27;</span>, <span class="hljs-comment">// Selector or Dom</span>\n  <span class="hljs-keyword">options</span>: {\n    <span class="hljs-comment">// Your Options</span>\n    <span class="hljs-comment">// 参考下方说明</span>\n  }\n});\n</code></pre>\n<ul>\n<li>UMD CDN: <a href="https://unpkg.com/@howdyjs/to-control/dist/index.umd.js" target="_blank">https://unpkg.com/@howdyjs/to-control/dist/index.umd.js</a>（需同时引入ToDrag）</li>\n<li>UMD Name: <code>HowdyToControl</code></li>\n<li>UMD Example: <a href="https://codepen.io/leon-kfd/pen/NWjyPBp" target="_blank">Click Here</a></li>\n</ul>\n<h3 id="options-objcet">Options (Objcet)</h3>\n<table>\n<thead>\n<tr>\n<th align="left">参数</th>\n<th align="left">说明</th>\n<th align="left">类型</th>\n<th align="left">可选值</th>\n<th align="left">默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">moveCursor</td>\n<td align="left">是否显示移动光标(cursor: move)</td>\n<td align="left">Boolean</td>\n<td align="left">-</td>\n<td align="left">true</td>\n</tr>\n<tr>\n<td align="left">forbidBodyScroll</td>\n<td align="left">默认开启，处理移动端滚动穿透问题，当前使用设置body的overflow实现，设为false时需自行处理滚动穿透问题</td>\n<td align="left">Boolean</td>\n<td align="left">-</td>\n<td align="left">true</td>\n</tr>\n<tr>\n<td align="left"><strong>isAbsolute</strong></td>\n<td align="left">是否为Absolute模式, 可控制absolute的元素在其父元素下进行拖拽</td>\n<td align="left">Boolean</td>\n<td align="left">-</td>\n<td align="left">false</td>\n</tr>\n<tr>\n<td align="left">parentSelector</td>\n<td align="left">Absolute模式下元素的父级容器，目前只支持传入字符串选择器</td>\n<td align="left">String</td>\n<td align="left">-</td>\n<td align="left">-</td>\n</tr>\n<tr>\n<td align="left">disabled</td>\n<td align="left">是否禁用，需传入函数返回Boolean</td>\n<td align="left">Function: () =&gt; boolean</td>\n<td align="left">-</td>\n<td align="left">-</td>\n</tr>\n<tr>\n<td align="left">arrowOptions</td>\n<td align="left">右下角更改大小用的箭头配置，配置参考下表</td>\n<td align="left">Object</td>\n<td align="left">-</td>\n<td align="left">-</td>\n</tr>\n<tr>\n<td align="left"><strong>positionMode</strong></td>\n<td align="left">定位模式,默认会记录top与left值,更改此值可以定位方向(1: top/left, 2: top/right, 3: bottom/left, 4: bottom/right)</td>\n<td align="left">Number</td>\n<td align="left">1,2,3,4</td>\n<td align="left">1</td>\n</tr>\n</tbody></table>\n<h4 id="arrowoptions-objcet">arrowOptions (Objcet)</h4>\n<table>\n<thead>\n<tr>\n<th align="left">参数</th>\n<th align="left">说明</th>\n<th align="left">类型</th>\n<th align="left">可选值</th>\n<th align="left">默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">size</td>\n<td align="left">箭头大小，单位为px</td>\n<td align="left">number</td>\n<td align="left">-</td>\n<td align="left">8</td>\n</tr>\n<tr>\n<td align="left">lineWidth</td>\n<td align="left">箭头线宽</td>\n<td align="left">number</td>\n<td align="left">-</td>\n<td align="left">2</td>\n</tr>\n<tr>\n<td align="left">lineColor</td>\n<td align="left">箭头颜色</td>\n<td align="left">String</td>\n<td align="left">-</td>\n<td align="left">#9a9a9a</td>\n</tr>\n<tr>\n<td align="left">padding</td>\n<td align="left">距离右下角padding</td>\n<td align="left">number</td>\n<td align="left">-</td>\n<td align="left">2</td>\n</tr>\n<tr>\n<td align="left">background</td>\n<td align="left">箭头盒子背景属性，一般用于自定义图标</td>\n<td align="left">String</td>\n<td align="left">-</td>\n<td align="left">none</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>箭头盒子的CSS类名为<code>to-control-arrow</code>，也可自行控制样式</p>\n</blockquote>\n<h3 id="event">Event</h3>\n<p>该插件继承自<a href="https://kongfandong.cn/howdy/to-drag/">@howdyjs/to-drag</a>，在拖拽更改位置时可以使用其事件回调。</p>\n<p>同时提供了<code>tocontrolstart</code>, <code>tocontrolmove</code>, <code>tocontrolend</code>作为更改大小后的事件，参数与to-drag事件参数一致。</p>\n<blockquote>\n<p>需要注意tocontrolend会同时触发todragend.</p>\n</blockquote>\n<h2 id="以vue指令方式使用">以Vue指令方式使用</h2>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ToControlDirective } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@howdyjs/to-control&#x27;</span>\n<span class="hljs-comment">// Vue3全局引入</span>\napp.use(ToControlDirective, someGlobalOptions)\n\n<span class="hljs-comment">// Vue2全局引入(对vue2做了兼容)</span>\nVue.use(ToControlDirective, someGlobalOptions)\n\n<span class="hljs-comment">// 组件内引入</span>\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">directive</span>: {\n    <span class="hljs-string">&#x27;to-control&#x27;</span>: ToControlDirective\n  }\n}\n</code></pre>\n<h3 id="指令value-objcet">指令Value (Objcet)</h3>\n<p>参数同上方的配置<code>Options</code></p>\n';
